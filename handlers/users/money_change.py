import datetime

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import message

from keyboards.default.cancel import cancel_keyboard
from loader import dp, dm


@dp.message_handler()
async def money_change(message: types.Message, state: FSMContext):
    if message.text.lower() == "–µ–¥–∞üçî":
        await message.answer('–í–æ–¥—É –∑–Ω–∞—á–∏—Ç –Ω–µ –ø—å–µ—Ç–µ.')
        await state.update_data(category='–µ–¥–∞üçî')

    elif message.text.lower() == "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Çüöó" or message.text.lower() == "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç":
        await message.answer('–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Ö–æ–¥–∏—Ç—å –ø–µ—à–∫–æ–º.')
        await state.update_data(category='—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Çüöó')

    elif message.text.lower() == '–∫–∞–∑–∏–Ω–æ':
        await message.answer('–í—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ø–ª–æ—Ö–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è.')
        await state.update_data(category='–∫–∞–∑–∏–Ω–æ')

    elif message.text.lower() == '–ø—Ä–æ–¥—É–∫—Ç—ã':
        await message.answer('–ó–∞—à–µ–ª –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ –º–æ–ª–æ–∫–æ–º, –≤—ã—à–µ–ª —Å–æ –≤—Å–µ–º –∫—Ä–æ–º–µ –º–æ–ª–æ–∫–∞.')
        await state.update_data(category='–ø—Ä–æ–¥—É–∫—Ç—ã')

    elif message.text.lower() == '–ø–æ–¥–∞—Ä–∫–∏ –º–Ω–µüéÅ':
        await message.answer('–ù–µ —Ç—Ä–∞—Ç—å—Ç–µ –≤—Å–µ —Å—Ä–∞–∑—É, –¥–æ–∂–¥–∏—Ç–µ—Å—å —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∏ –≤ —Å—Ç–∏–º–µ.')
        await state.update_data(category='–ø–æ–¥–∞—Ä–∫–∏ –º–Ω–µüéÅ')

    elif message.text.lower() == '–ø–æ–¥–∞—Ä–∫–∏ –¥—Ä—É–≥–∏–ºüéÅ':
        await message.answer('–ù—É —Ö–æ—Ç—è –±—ã –µ—Å—Ç—å –∫–æ–º—É –¥–∞—Ä–∏—Ç—å, –∏ —Ç–æ —Ö–æ—Ä–æ—à–æ.')
        await state.update_data(category='–ø–æ–¥–∞—Ä–∫–∏ –¥—Ä—É–≥–∏–ºüéÅ')

    elif message.text.lower() == '–∫–æ–º–º—É–Ω–∞–ª–∫–∞üí°':
        await message.answer('–≠–∫–æ–Ω–æ–º—å—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—é (–≤–æ–¥—É —Ç–æ–∂–µ)')
        await state.update_data(category='–∫–æ–º–º—É–Ω–∞–ª–∫–∞üí°')

    elif message.text.lower() == '—Ö–æ–±–±–∏üóø':
        await message.answer('üóø')
        await state.update_data(category='—Ö–æ–±–±–∏üóø')

    else:
        await message.answer('–ù–µ—Ç —Ç–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø–æ—ç—Ç–æ–º—É —Å–µ–π—á–∞—Å –¥–æ–±–∞–≤–∏–º.')
        await state.update_data(category=message.text)

    await message.answer('–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—É—é —Å—É–º–º—É',reply_markup=cancel_keyboard)

    await state.set_state("–í–≤–æ–¥ —Å—É–º–º—ã")

@dp.message_handler(state="–í–≤–æ–¥ —Å—É–º–º—ã")
async def money_change_dm(message: types.Message, state: FSMContext):
    try:
        summ = int(message.text)
        data = await state.get_data()
        current_date = datetime.datetime.now()
        current_date_str = current_date.strftime('%H:%M:%S %d.%m.%y')
        await dm.add_money_change(message.from_user.id, data.get('category'), summ, current_date_str)
        await message.answer('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')
        await state.reset_state()
    except ValueError:
        await message.answer("–ë—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        await state.set_state("–í–≤–æ–¥ —Å—É–º–º—ã")